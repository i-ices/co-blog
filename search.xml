<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo不能正常显示图片</title>
    <url>/2020/08/02/hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<h2 id="关于我第一次搭建的时候发现插入图片的时候不能正常显示，找到问题的原因，并记录下来。"><a href="#关于我第一次搭建的时候发现插入图片的时候不能正常显示，找到问题的原因，并记录下来。" class="headerlink" title="关于我第一次搭建的时候发现插入图片的时候不能正常显示，找到问题的原因，并记录下来。"></a>关于我第一次搭建的时候发现插入图片的时候不能正常显示，找到问题的原因，并记录下来。</h2><p><img src="http://4seldh.coding-pages.com/14.jpg"></p>
<a id="more"></a>

<h2 id="关于hexo插入图片无法显示的问题"><a href="#关于hexo插入图片无法显示的问题" class="headerlink" title="关于hexo插入图片无法显示的问题"></a>关于hexo插入图片无法显示的问题</h2><p>有时候自己的博文想要添加自己的图片的时候，会发现自己的图片不显示，这是我们可以打开开发者工具看一下图片的路径，会发现不是绝对路径。</p>
<h2 id="问题推测"><a href="#问题推测" class="headerlink" title="问题推测"></a>问题推测</h2><h3 id="本地图片没有上传到github仓库中，导致引用无效"><a href="#本地图片没有上传到github仓库中，导致引用无效" class="headerlink" title="本地图片没有上传到github仓库中，导致引用无效"></a>本地图片没有上传到github仓库中，导致引用无效</h3><hr>
<p>解决方案：安装插件，配置文件</p>
<p>首先我们需要一个图片路径转换的插件，插件名字叫hexo-asset-image</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p>安装完这个插件后需要修改一下里面的内容<br>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">              <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>打开_config.yml文件，修改以下内容<br><img src="/2020/08/02/hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/02.png" alt="配置文件"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="本地图片没有放在同名的文件夹中"><a href="#本地图片没有放在同名的文件夹中" class="headerlink" title="本地图片没有放在同名的文件夹中"></a>本地图片没有放在同名的文件夹中</h3><p>解决方案：将需要引用的本地图片存放在与文章名相同的文件夹中</p>
<h3 id="图片的路径出错"><a href="#图片的路径出错" class="headerlink" title="图片的路径出错"></a>图片的路径出错</h3><p>我在使用开发者工具查看图片的路径的时候发现文件的路径有点不对头<br>但是我总找不到原因，后来随便修改了一下站点配置文件成功解决<br>只要把url的https前缀加上就行<br><img src="/2020/08/02/hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/03.png" alt="修改url"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>maven项目添加自定义jar包</title>
    <url>/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/</url>
    <content><![CDATA[<hr>
<h2 id="添加自定义jar包放入本地的maven仓库"><a href="#添加自定义jar包放入本地的maven仓库" class="headerlink" title="添加自定义jar包放入本地的maven仓库"></a><center>添加自定义jar包放入本地的maven仓库</center></h2><p><img src="http://4seldh.coding-pages.com/13.jpg"></p>
<a id="more"></a>

<h4 id="1-第一步：导出自定义jar包"><a href="#1-第一步：导出自定义jar包" class="headerlink" title="1. 第一步：导出自定义jar包"></a>1. 第一步：导出自定义jar包</h4><p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/01.png"></p>
<ol>
<li><strong>选择 File -&gt;</strong> <strong>Project Structure</strong> </li>
<li><strong>在弹出的窗口中左侧选中”Artifacts”，点击”+”选择jar，然后选择”from modules with dependencies”。</strong></li>
<li><strong>如果没有main方法的话就直接点ok，如果有就需要选中</strong></li>
</ol>
<p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/02.png"></p>
<ol start="4">
<li><p><strong>回到IDEA的主菜单，选择“Build - Build Artifacts”下的“Build”或者“Rebuild”即可生成最终的可运行的jar.</strong></p>
<p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/03.png" style="zoom:67%;"><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/04.png"><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/05.png" style="zoom:80%;"></p>
</li>
</ol>
<h4 id="2-第二步：打开cmd窗口-运行以下命令"><a href="#2-第二步：打开cmd窗口-运行以下命令" class="headerlink" title="2. 第二步：打开cmd窗口 运行以下命令"></a>2. 第二步：打开cmd窗口 运行以下命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn install:install-file </span><br><span class="line">    -Dfile&#x3D;jar文件所在路径（这里使用绝对路径） </span><br><span class="line">    -DgroupId&#x3D;照着项目的pom文件抄</span><br><span class="line">    -DartifactId&#x3D;照着项目的pom文件抄</span><br><span class="line">    -Dversion&#x3D;版本号  </span><br><span class="line">    -Dpackaging&#x3D;jar</span><br></pre></td></tr></table></figure>

<p><strong>第三行和第四行照着项目pom文件里面抄就行</strong></p>
<p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/06.png"></p>
<p>例子：mvn install:install-file -Dfile=F:\alipay.jar -DgroupId=aliyun -DartifactId=alipay -Dversion=1.0 -Dpackaging=jar</p>
<p><strong>执行成功截图</strong></p>
<p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/07.png"></p>
<h4 id="3-执行后就能在本地仓库中看到jar包了，然后就去maven中导入"><a href="#3-执行后就能在本地仓库中看到jar包了，然后就去maven中导入" class="headerlink" title="3. 执行后就能在本地仓库中看到jar包了，然后就去maven中导入"></a>3. 执行后就能在本地仓库中看到jar包了，然后就去maven中导入</h4><p>跟往常一样导入就行</p>
<p><img src="/2020/08/15/maven%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89jar%E5%8C%85/08.png"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
        <tag>jar</tag>
      </tags>
  </entry>
  <entry>
    <title>图床</title>
    <url>/2021/01/31/%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a><center>图床</center></h2><p><img src="https://gitee.com/Eclipse23/imgs/raw/master/image/2021_01_31/1612035042517-b1a26436.png"></p>
<a id="more"></a>

<hr>
<p><strong>访问进入图床</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http://eclipse23.gitee.io/imgs/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>-图床</tag>
      </tags>
  </entry>
  <entry>
    <title>navicat-for-mysql破解</title>
    <url>/2020/08/04/navicat-for-mysql%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="破解navicat-for-mysql中文版，无需激活码"><a href="#破解navicat-for-mysql中文版，无需激活码" class="headerlink" title="破解navicat for mysql中文版，无需激活码"></a><center>破解navicat for mysql中文版，无需激活码</center></h2><p><img src="http://4seldh.coding-pages.com/71.jpg"></p>
<a id="more"></a>

<ol>
<li><strong>首先下载破解版的navicat for mysql</strong><br><a href="https://i-ices.lanzoui.com/iZJWAp9i23c">下载地址</a> <br>
</li>
</ol>
<hr>
<ol start="2">
<li><strong>解压后文件夹下面有两个文件</strong><br><img src="/2020/08/04/navicat-for-mysql%E7%A0%B4%E8%A7%A3/01.png" alt="文件"><br>选择第一个按照正常流程安装<br>
</li>
</ol>
<hr>
<ol start="3">
<li><strong>安装完成后点击第二个</strong><br><img src="/2020/08/04/navicat-for-mysql%E7%A0%B4%E8%A7%A3/02.png" alt="第二个"><br>
</li>
</ol>
<hr>
<ol start="4">
<li><strong>点开后会让你选择安装好的exe文件</strong><br><img src="/2020/08/04/navicat-for-mysql%E7%A0%B4%E8%A7%A3/03.png" alt="选择安装路径下的exe文件"><br>选择刚刚安装的navicat for mysql 安装的目录下面的exe文件<br>
</li>
</ol>
<hr>
<ol start="5">
<li><strong>出现了下面这个提示就表示成功破解</strong><br><img src="/2020/08/04/navicat-for-mysql%E7%A0%B4%E8%A7%A3/04.png" alt="提示"></li>
</ol>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>破解</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>配置tomcat环境</title>
    <url>/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="配置tomcat环境变量，亲测可用"><a href="#配置tomcat环境变量，亲测可用" class="headerlink" title="配置tomcat环境变量，亲测可用"></a><center>配置tomcat环境变量，亲测可用</center></h2><p><img src="http://4seldh.coding-pages.com/70.jpg"></p>
<a id="more"></a>

<hr>
<hr>
<ol>
<li><strong>首先解压tomcat这个不用多说，还有JDK</strong></li>
</ol>
<br>

<hr>
<ol start="2">
<li><p><strong>依次根据图片点进去</strong></p>
 <br>

<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/06.jpg"></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/07.png"></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/08.png"></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/09.png"></p>
</li>
</ol>
<hr>
<ol start="3">
<li><p><strong>先给JDK配置好环境变量</strong></p>
<p><strong>JAVA_HOME</strong></p>
</li>
</ol>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/01.png" alt="JDK的环境配置"></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/02.png" alt="JDK的安装目录"></p>
<p>在Path下添加一条记录 <strong>%JAVA_HOME%\bin</strong></p>
<p>如图，按照上图一样配置好环境变量即可</p>
<hr>
<ol start="4">
<li><strong>接下来就是给tomcat配置环境变量了</strong></li>
</ol>
<p>tomcat配置环境变量也还是一样新建两个</p>
<p><strong>CATALINA_BASE</strong></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/03.png"></p>
<p><strong>CATALINA_HOME</strong></p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/04.png"></p>
<p>tomcat的安装目录如下<img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/05.png"></p>
<hr>
<ol start="5">
<li><strong>到了这一步也已经大功告成了</strong></li>
</ol>
<p>点击tomcat的bin目录下的startup.bat启动</p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/10.png"></p>
<p>如果显示下面的时间就表示启动成功</p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/11.png"></p>
<p>然后就可以访问localhost:8080了</p>
<p><img src="/2020/11/19/%E9%85%8D%E7%BD%AEtomcat%E7%8E%AF%E5%A2%83/12.png"></p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>环境</tag>
      </tags>
  </entry>
  <entry>
    <title>学习通访问次数</title>
    <url>/2021/01/17/%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0/</url>
    <content><![CDATA[<h2 id="学习通访问次数"><a href="#学习通访问次数" class="headerlink" title="学习通访问次数"></a><center>学习通访问次数</center></h2><p><img src="/2021/01/17/%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0/01.jpg"></p>
<a id="more"></a>

<hr>
<hr>
<ol>
<li><p>首先登录学习通并在需要刷访问次数的地方按F12或者右键检查打开控制台，切换到console</p>
<p><img src="/2021/01/17/%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0/02.jpg" alt="image-20210117212802789"></p>
</li>
<li><p>复制这一串代码放到console内回车</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.src = <span class="string">&#x27;https://eclipse23.gitee.io/chao-xing/load-min.js&#x27;</span>;</span><br><span class="line">script.onload = script.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!script.readyState || <span class="regexp">/loaded|complete/</span>.test(script.readyState)) &#123;</span><br><span class="line">        script.onload = script.onreadystatechange = <span class="literal">null</span>;</span><br><span class="line">        chaoXing();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;head&#x27;</span>).appendChild(script);</span><br></pre></td></tr></table></figure>

<p><img src="/2021/01/17/%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0/03.jpg" alt="image-20210117213136627"></p>
</li>
<li><p>然后就会有一个提示，意思就是多久刷新一次，单位为秒，个人建议五秒以上，然后就可以放到那里不用管了，想要停止可以直接刷新当前页就行了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习通</category>
      </categories>
      <tags>
        <tag>学习通</tag>
        <tag>JS</tag>
      </tags>
  </entry>
</search>
